import{S as Gi,i as $i,s as Hi,C as Jo,w as Ui,x as Qi,y as ji,z as Vi,A as qi,f as Zi,t as Bi,B as Ji,P as Li,l as n,r as a,a as p,m as s,n as r,u as t,h as o,c as u,p as ki,b as c,G as i,E as Ki}from"../../chunks/index-02a6647b.js";import{P as Wi}from"../../chunks/_post-421b6498.js";import"../../chunks/helpers-e147ed77.js";import"../../chunks/Categoria.svelte_svelte_type_style_lang-56b3738a.js";function Xi(L){let d,g,h,A,m,v,k,ge,I,Z,Ue,Qe,ze,S,B,je,Ve,be,N,J,Ze,_e,w,Be,Ee,y,K,Je,he,_,Ke,W,We,Xe,X,Ye,eo,Ae,M,wi=`<code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g firebase-tools
<span class="token function">npm</span> <span class="token function">install</span> -g @Angular/cli</code>`,Ce,C,oo,Y,io,ao,Fe,F,to,ee,lo,no,Te,x,so,Pe,R,ro,De,G,oe,co,Ie,$,po,Se,O,yi=`<code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> Angularfire2 firebase --save
ng new todolist</code>`,Me,H,uo,Oe,q,ie,mo,fo,qe,U,vo,Le,Q,go,ke,T,ae,zo,bo,te,_o,Ne,z,Eo,le,ho,Ao,ne,Co,Fo,se,To,Po,we,E,Do,re,Io,So,ce,Mo,Oo,ye,f,qo,pe,Lo,ko,ue,No,wo,de,yo,xo,me,Ro,Go,fe,$o,Ho,xe,P,Uo,ve,Qo,jo;return{c(){d=n("h1"),g=n("strong"),h=a("Analisi dei tool esistenti e guida alla realizzazione di un\u2019applicazione To Do List in Angular"),A=p(),m=n("h2"),v=n("strong"),k=a("Tool che cos\u2019\xE8? To Do List cos\u2019\xE8?"),ge=p(),I=n("p"),Z=n("em"),Ue=a("Cos\u2019\xE8 un tool?"),Qe=a(`
La traduzione in italiano \xE8 \u201Cstrumento/utensile\u201D, noi informatici non lo conosciamo cos\xEC, ma come un programma o insieme di programmi che hanno un compito preciso, utili per un determinato scopo.`),ze=p(),S=n("p"),B=n("em"),je=a("Cos\u2019\xE8 una To Do List?"),Ve=a(`
Da alcuni anni a questa parte si \xE8 diffuso un nuovo strumento di produttivit\xE0 personale pi\xF9 semplice ed efficace, la to do list. E\u2019, come ricorda la parola inglese, una vera e propria lista che aiuta a focalizzare e fare ci\xF2 che una persona si \xE8 prefissata. Quindi non \xE8 solo un modo di organizzare la vita, ma \xE8 concepito per organizzare scadenze, priorit\xE0 ed urgenze, soprattutto in ambito lavorativo.`),be=p(),N=n("h2"),J=n("strong"),Ze=a("I tool esistenti"),_e=p(),w=n("p"),Be=a("Su Internet troviamo varie tipologie di tool differenti per la creazione di una to do list, uno dei migliori \xE8 \u201CRemember The Milk\u201D (RTM), che si integra perfettamente con i principali programmi di messaggistica istantanea, permettendo alla persona di inserire facilmente nuove attivit\xE0 e ricevere notifiche per le attivit\xE0 in scadenza. Tra gli altri tool ricordiamo \u201CNowDoThis\u201D, \u201CGmail Tasks\u201D, \u201CNozbe\u201D e \u201CToodledo\u201D."),Ee=p(),y=n("h2"),K=n("strong"),Je=a("Guida: applicazione to do list in Angular"),he=p(),_=n("p"),Ke=a("Per la creazione di una to do list con "),W=n("em"),We=a("Angular"),Xe=a(" partiamo dal presupposto che deve essere installato "),X=n("em"),Ye=a("Firebase CLI"),eo=a("; lo si pu\xF2 fare aprendo il terminale e digitando il comando:"),Ae=p(),M=n("pre"),Ce=p(),C=n("p"),oo=a("Come editor di testo pu\xF2 essere utilizzato "),Y=n("em"),io=a("Visual Studio Code"),ao=a("."),Fe=p(),F=n("p"),to=a("Prima di tutto vai sulla console di Firebase e crea un nuovo progetto, clicca su "),ee=n("em"),lo=a("Aggiungi Firebase"),no=a(" all\u2019applicazione web e copia il contenuto in un file di testo che ti servir\xE0 successivamente."),Te=p(),x=n("p"),so=a(`Nella sezione Database del menu c\u2019\xE8 la prova Firestore in versione beta. Successivamente selezioniamo avvia in modalit\xE0 di prova.
Nella schermata successiva seleziona aggiungi raccolta e in seguito aggiungi 2 campi con valori di default, ora il database \xE8 pronto per interagire con Angular.`),Pe=p(),R=n("p"),ro=a("Prima di tutto genera il tuo progetto usando Angular CLI ed esegui il comando:"),De=p(),G=n("p"),oe=n("code"),co=a("ng new todolist"),Ie=p(),$=n("p"),po=a("Una volta completato il setup, spostati nella cartella todolist ed esegui i seguenti pacchetti necessari alla comunicazione con Firebase:"),Se=p(),O=n("pre"),Me=p(),H=n("p"),uo=a("Una volta completato il setup spostiamoci nella cartella to do list ed eseguiamo i seguenti pacchetti necessari alla comunicazione con Firebase:"),Oe=p(),q=n("p"),ie=n("code"),mo=a("npm install Angularfire2 firebase --save"),fo=a("."),qe=p(),U=n("p"),vo=a(`A questo punto apriamo l\u2019editor di testo e creaiamo un file .ts nella cartella dove \xE8 stato effettuato il salvataggio durante la fase di configurazione di Firebase.
Adesso impostiamo il modulo app.module.ts che si trova nella stessa cartella e apriamo il modulo app.component.ts per verificare se il collegamento al Firebase funziona come dovrebbe. Apriamo il modulo app.component.ts per verificare se il collegamento al Firebase funziona come dovrebbe.`),Le=p(),Q=n("p"),go=a("Definiamo due propriet\xE0:"),ke=p(),T=n("ul"),ae=n("li"),zo=a("todos Collection"),bo=p(),te=n("li"),_o=a("todos (l\u2019array che ci viene ritornato)"),Ne=p(),z=n("p"),Eo=a("Nella funzione ngOnInit, fare un bind di todosCollection all\u2019istanza di "),le=n("em"),ho=a("AngularFirestore"),Ao=a(` usando il metodo .collection al quale occorre passare il nome della raccolta (todos).
Ora \xE8 opportuno un bind di todos a `),ne=n("em"),Co=a("todosCollection"),Fo=a(" e usare il metodo "),se=n("code"),To=a(".valuechanges()"),Po=a(` che ritorner\xE0 un \u201Cobservable\u201D. Successivamente, nel modulo app.component.html sar\xE0 possibile fare apparire i contenuti presi da Firebase.
Adesso \xE8 arrivato il momento di aggiungere i to-do.`),we=p(),E=n("p"),Do=a(`Sempre in app.component.html aggiungiamo il markup del form.
In app.component.ts dovremo creare la propriet\xE0 description, che servir\xE0 per fare il 2-way data binding al `),re=n("em"),Io=a("ngModel"),So=a(`, poi passiamo alla funzione il valore di ngModel, mentre per quanto riguarda il parametro \u2018done\u2019 bisogner\xE0 introdurre false di default.
\xC8 arrivato il momento di spuntare i todo, per farlo avremo bisogno di selezionare un singolo todo dal database, ma attenzione! Allo stato attuale utilizzando `),ce=n("code"),Mo=a(".valueChanges()"),Oo=a(`, non si ha la possibilit\xE0 di ottenere l\u2019id di ogni singolo to-do, perch\xE9 \xE8 considerato un metadata.
Per ottenere questo risultato bisogner\xE0 apportare un po\u2019 di modifiche al nostro codice.`),ye=p(),f=n("p"),qo=a(`Sotto l\u2019interfaccia Todos aggiungiamone una nuova che estende quest\u2019ultima.
A questo punto bisogna ridefinire this.todos allo `),pe=n("code"),Lo=a("ngOnInit()"),ko=a(" per poter usare "),ue=n("code"),No=a(".snapshotChanges()"),wo=a(` che, differentemente dal precedente metodo, restituisce anche diversi metadata che includono l\u2019id del todo. Ovviamente bisogner\xE0 modificare anche il template.
Si deve aggiungere una `),de=n("em"),yo=a("checkbox"),xo=a(" che permetter\xE0 di segnare un\u2019attivit\xE0 come completata oppure no.  A questo punto impostare \u201Cchecked\u201D se il valore di todo.data.done \xE8 uguale a true: al change eseguire invece la funzione "),me=n("code"),Ro=a("updateTodo()"),Go=a(`, passando l\u2019id e l\u2019evento scatenato al change. Infine, impostare una classe done, se todo.data.done \xE8 true.
Nel `),fe=n("em"),$o=a("template"),Ho=a(", all\u2019interno del ciclo \u201Cfor\u201D, aggiungi il bottone che permetter\xE0 di cancellare i tuoi to-do."),xe=p(),P=n("p"),Uo=a("Esso mostra il bottone esclusivamente se il todo \xE8 \u201Ccheckato\u201D. Ora, ovviamente, passiamo alla funzione id. Utilizzeremo il metodo "),ve=n("code"),Qo=a(".delete()"),jo=a(` cos\xEC i nostri to-do verranno cancellati dalla lista.
Deployare \xE8 un\u2019app che funziona sfruttando l\u2019hosting che ci offre Firebase. E\u2019 molto semplice, bastano pochi semplici passi: andare alla sezione Hosting all\u2019interno della nostra console di Firebase e cliccare su \u201Cinizia\u201D. L\u2019applicazione suggerisce di installare la sua CLI. Se non ancora fatto, installarla e cliccare su \u201Ccontinua\u201D.
Nel secondo passaggio vengono fornite tutte le istruzioni per poter procedere con il deploy. Quando si lancer\xE0 il comando firebase init, se non si conoscono molto bene i funzionamenti delle configurazioni di Firebase, il consiglio \xE8 quello di selezionare solo l\u2019opzione hosting, per evitare confusione con tutte le configurazioni che Firebase mette a disposizione.
In questo modo si pu\xF2 creare un\u2019applicazione to do list in Angular.`),this.h()},l(e){d=s(e,"H1",{});var l=r(d);g=s(l,"STRONG",{});var Ko=r(g);h=t(Ko,"Analisi dei tool esistenti e guida alla realizzazione di un\u2019applicazione To Do List in Angular"),Ko.forEach(o),l.forEach(o),A=u(e),m=s(e,"H2",{});var Wo=r(m);v=s(Wo,"STRONG",{});var Xo=r(v);k=t(Xo,"Tool che cos\u2019\xE8? To Do List cos\u2019\xE8?"),Xo.forEach(o),Wo.forEach(o),ge=u(e),I=s(e,"P",{});var Vo=r(I);Z=s(Vo,"EM",{});var Yo=r(Z);Ue=t(Yo,"Cos\u2019\xE8 un tool?"),Yo.forEach(o),Qe=t(Vo,`
La traduzione in italiano \xE8 \u201Cstrumento/utensile\u201D, noi informatici non lo conosciamo cos\xEC, ma come un programma o insieme di programmi che hanno un compito preciso, utili per un determinato scopo.`),Vo.forEach(o),ze=u(e),S=s(e,"P",{});var Zo=r(S);B=s(Zo,"EM",{});var ei=r(B);je=t(ei,"Cos\u2019\xE8 una To Do List?"),ei.forEach(o),Ve=t(Zo,`
Da alcuni anni a questa parte si \xE8 diffuso un nuovo strumento di produttivit\xE0 personale pi\xF9 semplice ed efficace, la to do list. E\u2019, come ricorda la parola inglese, una vera e propria lista che aiuta a focalizzare e fare ci\xF2 che una persona si \xE8 prefissata. Quindi non \xE8 solo un modo di organizzare la vita, ma \xE8 concepito per organizzare scadenze, priorit\xE0 ed urgenze, soprattutto in ambito lavorativo.`),Zo.forEach(o),be=u(e),N=s(e,"H2",{});var oi=r(N);J=s(oi,"STRONG",{});var ii=r(J);Ze=t(ii,"I tool esistenti"),ii.forEach(o),oi.forEach(o),_e=u(e),w=s(e,"P",{});var ai=r(w);Be=t(ai,"Su Internet troviamo varie tipologie di tool differenti per la creazione di una to do list, uno dei migliori \xE8 \u201CRemember The Milk\u201D (RTM), che si integra perfettamente con i principali programmi di messaggistica istantanea, permettendo alla persona di inserire facilmente nuove attivit\xE0 e ricevere notifiche per le attivit\xE0 in scadenza. Tra gli altri tool ricordiamo \u201CNowDoThis\u201D, \u201CGmail Tasks\u201D, \u201CNozbe\u201D e \u201CToodledo\u201D."),ai.forEach(o),Ee=u(e),y=s(e,"H2",{});var ti=r(y);K=s(ti,"STRONG",{});var li=r(K);Je=t(li,"Guida: applicazione to do list in Angular"),li.forEach(o),ti.forEach(o),he=u(e),_=s(e,"P",{});var j=r(_);Ke=t(j,"Per la creazione di una to do list con "),W=s(j,"EM",{});var ni=r(W);We=t(ni,"Angular"),ni.forEach(o),Xe=t(j," partiamo dal presupposto che deve essere installato "),X=s(j,"EM",{});var si=r(X);Ye=t(si,"Firebase CLI"),si.forEach(o),eo=t(j,"; lo si pu\xF2 fare aprendo il terminale e digitando il comando:"),j.forEach(o),Ae=u(e),M=s(e,"PRE",{class:!0});var xi=r(M);xi.forEach(o),Ce=u(e),C=s(e,"P",{});var Re=r(C);oo=t(Re,"Come editor di testo pu\xF2 essere utilizzato "),Y=s(Re,"EM",{});var ri=r(Y);io=t(ri,"Visual Studio Code"),ri.forEach(o),ao=t(Re,"."),Re.forEach(o),Fe=u(e),F=s(e,"P",{});var Ge=r(F);to=t(Ge,"Prima di tutto vai sulla console di Firebase e crea un nuovo progetto, clicca su "),ee=s(Ge,"EM",{});var ci=r(ee);lo=t(ci,"Aggiungi Firebase"),ci.forEach(o),no=t(Ge," all\u2019applicazione web e copia il contenuto in un file di testo che ti servir\xE0 successivamente."),Ge.forEach(o),Te=u(e),x=s(e,"P",{});var pi=r(x);so=t(pi,`Nella sezione Database del menu c\u2019\xE8 la prova Firestore in versione beta. Successivamente selezioniamo avvia in modalit\xE0 di prova.
Nella schermata successiva seleziona aggiungi raccolta e in seguito aggiungi 2 campi con valori di default, ora il database \xE8 pronto per interagire con Angular.`),pi.forEach(o),Pe=u(e),R=s(e,"P",{});var ui=r(R);ro=t(ui,"Prima di tutto genera il tuo progetto usando Angular CLI ed esegui il comando:"),ui.forEach(o),De=u(e),G=s(e,"P",{});var di=r(G);oe=s(di,"CODE",{});var mi=r(oe);co=t(mi,"ng new todolist"),mi.forEach(o),di.forEach(o),Ie=u(e),$=s(e,"P",{});var fi=r($);po=t(fi,"Una volta completato il setup, spostati nella cartella todolist ed esegui i seguenti pacchetti necessari alla comunicazione con Firebase:"),fi.forEach(o),Se=u(e),O=s(e,"PRE",{class:!0});var Ri=r(O);Ri.forEach(o),Me=u(e),H=s(e,"P",{});var vi=r(H);uo=t(vi,"Una volta completato il setup spostiamoci nella cartella to do list ed eseguiamo i seguenti pacchetti necessari alla comunicazione con Firebase:"),vi.forEach(o),Oe=u(e),q=s(e,"P",{});var Bo=r(q);ie=s(Bo,"CODE",{});var gi=r(ie);mo=t(gi,"npm install Angularfire2 firebase --save"),gi.forEach(o),fo=t(Bo,"."),Bo.forEach(o),qe=u(e),U=s(e,"P",{});var zi=r(U);vo=t(zi,`A questo punto apriamo l\u2019editor di testo e creaiamo un file .ts nella cartella dove \xE8 stato effettuato il salvataggio durante la fase di configurazione di Firebase.
Adesso impostiamo il modulo app.module.ts che si trova nella stessa cartella e apriamo il modulo app.component.ts per verificare se il collegamento al Firebase funziona come dovrebbe. Apriamo il modulo app.component.ts per verificare se il collegamento al Firebase funziona come dovrebbe.`),zi.forEach(o),Le=u(e),Q=s(e,"P",{});var bi=r(Q);go=t(bi,"Definiamo due propriet\xE0:"),bi.forEach(o),ke=u(e),T=s(e,"UL",{});var $e=r(T);ae=s($e,"LI",{});var _i=r(ae);zo=t(_i,"todos Collection"),_i.forEach(o),bo=u($e),te=s($e,"LI",{});var Ei=r(te);_o=t(Ei,"todos (l\u2019array che ci viene ritornato)"),Ei.forEach(o),$e.forEach(o),Ne=u(e),z=s(e,"P",{});var D=r(z);Eo=t(D,"Nella funzione ngOnInit, fare un bind di todosCollection all\u2019istanza di "),le=s(D,"EM",{});var hi=r(le);ho=t(hi,"AngularFirestore"),hi.forEach(o),Ao=t(D,` usando il metodo .collection al quale occorre passare il nome della raccolta (todos).
Ora \xE8 opportuno un bind di todos a `),ne=s(D,"EM",{});var Ai=r(ne);Co=t(Ai,"todosCollection"),Ai.forEach(o),Fo=t(D," e usare il metodo "),se=s(D,"CODE",{});var Ci=r(se);To=t(Ci,".valuechanges()"),Ci.forEach(o),Po=t(D,` che ritorner\xE0 un \u201Cobservable\u201D. Successivamente, nel modulo app.component.html sar\xE0 possibile fare apparire i contenuti presi da Firebase.
Adesso \xE8 arrivato il momento di aggiungere i to-do.`),D.forEach(o),we=u(e),E=s(e,"P",{});var V=r(E);Do=t(V,`Sempre in app.component.html aggiungiamo il markup del form.
In app.component.ts dovremo creare la propriet\xE0 description, che servir\xE0 per fare il 2-way data binding al `),re=s(V,"EM",{});var Fi=r(re);Io=t(Fi,"ngModel"),Fi.forEach(o),So=t(V,`, poi passiamo alla funzione il valore di ngModel, mentre per quanto riguarda il parametro \u2018done\u2019 bisogner\xE0 introdurre false di default.
\xC8 arrivato il momento di spuntare i todo, per farlo avremo bisogno di selezionare un singolo todo dal database, ma attenzione! Allo stato attuale utilizzando `),ce=s(V,"CODE",{});var Ti=r(ce);Mo=t(Ti,".valueChanges()"),Ti.forEach(o),Oo=t(V,`, non si ha la possibilit\xE0 di ottenere l\u2019id di ogni singolo to-do, perch\xE9 \xE8 considerato un metadata.
Per ottenere questo risultato bisogner\xE0 apportare un po\u2019 di modifiche al nostro codice.`),V.forEach(o),ye=u(e),f=s(e,"P",{});var b=r(f);qo=t(b,`Sotto l\u2019interfaccia Todos aggiungiamone una nuova che estende quest\u2019ultima.
A questo punto bisogna ridefinire this.todos allo `),pe=s(b,"CODE",{});var Pi=r(pe);Lo=t(Pi,"ngOnInit()"),Pi.forEach(o),ko=t(b," per poter usare "),ue=s(b,"CODE",{});var Di=r(ue);No=t(Di,".snapshotChanges()"),Di.forEach(o),wo=t(b,` che, differentemente dal precedente metodo, restituisce anche diversi metadata che includono l\u2019id del todo. Ovviamente bisogner\xE0 modificare anche il template.
Si deve aggiungere una `),de=s(b,"EM",{});var Ii=r(de);yo=t(Ii,"checkbox"),Ii.forEach(o),xo=t(b," che permetter\xE0 di segnare un\u2019attivit\xE0 come completata oppure no.  A questo punto impostare \u201Cchecked\u201D se il valore di todo.data.done \xE8 uguale a true: al change eseguire invece la funzione "),me=s(b,"CODE",{});var Si=r(me);Ro=t(Si,"updateTodo()"),Si.forEach(o),Go=t(b,`, passando l\u2019id e l\u2019evento scatenato al change. Infine, impostare una classe done, se todo.data.done \xE8 true.
Nel `),fe=s(b,"EM",{});var Mi=r(fe);$o=t(Mi,"template"),Mi.forEach(o),Ho=t(b,", all\u2019interno del ciclo \u201Cfor\u201D, aggiungi il bottone che permetter\xE0 di cancellare i tuoi to-do."),b.forEach(o),xe=u(e),P=s(e,"P",{});var He=r(P);Uo=t(He,"Esso mostra il bottone esclusivamente se il todo \xE8 \u201Ccheckato\u201D. Ora, ovviamente, passiamo alla funzione id. Utilizzeremo il metodo "),ve=s(He,"CODE",{});var Oi=r(ve);Qo=t(Oi,".delete()"),Oi.forEach(o),jo=t(He,` cos\xEC i nostri to-do verranno cancellati dalla lista.
Deployare \xE8 un\u2019app che funziona sfruttando l\u2019hosting che ci offre Firebase. E\u2019 molto semplice, bastano pochi semplici passi: andare alla sezione Hosting all\u2019interno della nostra console di Firebase e cliccare su \u201Cinizia\u201D. L\u2019applicazione suggerisce di installare la sua CLI. Se non ancora fatto, installarla e cliccare su \u201Ccontinua\u201D.
Nel secondo passaggio vengono fornite tutte le istruzioni per poter procedere con il deploy. Quando si lancer\xE0 il comando firebase init, se non si conoscono molto bene i funzionamenti delle configurazioni di Firebase, il consiglio \xE8 quello di selezionare solo l\u2019opzione hosting, per evitare confusione con tutte le configurazioni che Firebase mette a disposizione.
In questo modo si pu\xF2 creare un\u2019applicazione to do list in Angular.`),He.forEach(o),this.h()},h(){ki(M,"class","language-bash"),ki(O,"class","language-bash")},m(e,l){c(e,d,l),i(d,g),i(g,h),c(e,A,l),c(e,m,l),i(m,v),i(v,k),c(e,ge,l),c(e,I,l),i(I,Z),i(Z,Ue),i(I,Qe),c(e,ze,l),c(e,S,l),i(S,B),i(B,je),i(S,Ve),c(e,be,l),c(e,N,l),i(N,J),i(J,Ze),c(e,_e,l),c(e,w,l),i(w,Be),c(e,Ee,l),c(e,y,l),i(y,K),i(K,Je),c(e,he,l),c(e,_,l),i(_,Ke),i(_,W),i(W,We),i(_,Xe),i(_,X),i(X,Ye),i(_,eo),c(e,Ae,l),c(e,M,l),M.innerHTML=wi,c(e,Ce,l),c(e,C,l),i(C,oo),i(C,Y),i(Y,io),i(C,ao),c(e,Fe,l),c(e,F,l),i(F,to),i(F,ee),i(ee,lo),i(F,no),c(e,Te,l),c(e,x,l),i(x,so),c(e,Pe,l),c(e,R,l),i(R,ro),c(e,De,l),c(e,G,l),i(G,oe),i(oe,co),c(e,Ie,l),c(e,$,l),i($,po),c(e,Se,l),c(e,O,l),O.innerHTML=yi,c(e,Me,l),c(e,H,l),i(H,uo),c(e,Oe,l),c(e,q,l),i(q,ie),i(ie,mo),i(q,fo),c(e,qe,l),c(e,U,l),i(U,vo),c(e,Le,l),c(e,Q,l),i(Q,go),c(e,ke,l),c(e,T,l),i(T,ae),i(ae,zo),i(T,bo),i(T,te),i(te,_o),c(e,Ne,l),c(e,z,l),i(z,Eo),i(z,le),i(le,ho),i(z,Ao),i(z,ne),i(ne,Co),i(z,Fo),i(z,se),i(se,To),i(z,Po),c(e,we,l),c(e,E,l),i(E,Do),i(E,re),i(re,Io),i(E,So),i(E,ce),i(ce,Mo),i(E,Oo),c(e,ye,l),c(e,f,l),i(f,qo),i(f,pe),i(pe,Lo),i(f,ko),i(f,ue),i(ue,No),i(f,wo),i(f,de),i(de,yo),i(f,xo),i(f,me),i(me,Ro),i(f,Go),i(f,fe),i(fe,$o),i(f,Ho),c(e,xe,l),c(e,P,l),i(P,Uo),i(P,ve),i(ve,Qo),i(P,jo)},p:Ki,d(e){e&&o(d),e&&o(A),e&&o(m),e&&o(ge),e&&o(I),e&&o(ze),e&&o(S),e&&o(be),e&&o(N),e&&o(_e),e&&o(w),e&&o(Ee),e&&o(y),e&&o(he),e&&o(_),e&&o(Ae),e&&o(M),e&&o(Ce),e&&o(C),e&&o(Fe),e&&o(F),e&&o(Te),e&&o(x),e&&o(Pe),e&&o(R),e&&o(De),e&&o(G),e&&o(Ie),e&&o($),e&&o(Se),e&&o(O),e&&o(Me),e&&o(H),e&&o(Oe),e&&o(q),e&&o(qe),e&&o(U),e&&o(Le),e&&o(Q),e&&o(ke),e&&o(T),e&&o(Ne),e&&o(z),e&&o(we),e&&o(E),e&&o(ye),e&&o(f),e&&o(xe),e&&o(P)}}}function Yi(L){let d,g;const h=[L[0],Ni];let A={$$slots:{default:[Xi]},$$scope:{ctx:L}};for(let m=0;m<h.length;m+=1)A=Jo(A,h[m]);return d=new Wi({props:A}),{c(){Ui(d.$$.fragment)},l(m){Qi(d.$$.fragment,m)},m(m,v){ji(d,m,v),g=!0},p(m,[v]){const k=v&1?Vi(h,[v&1&&qi(m[0]),v&0&&qi(Ni)]):{};v&2&&(k.$$scope={dirty:v,ctx:m}),d.$set(k)},i(m){g||(Zi(d.$$.fragment,m),g=!0)},o(m){Bi(d.$$.fragment,m),g=!1},d(m){Ji(d,m)}}}const Ni={id:"2022-10-27-3",titolo:"Analisi e guida realizzazione applicazione con Angular",featured:!1,autore:"Matteo Sola e Francesco Zaina",data:"2022-11-07T00:00:00.000Z",cover:"cover.webp",introduzione:"Realizziamo una semplice ToDo list in Angular.js",pubblicato:!0,sezione:"IT",categorie:["Programmazione","Frontend","Angular","Framework"]};function ea(L,d,g){return L.$$set=h=>{g(0,d=Jo(Jo({},d),Li(h)))},d=Li(d),[d]}class la extends Gi{constructor(d){super(),$i(this,d,ea,Yi,Hi,{})}}export{la as default,Ni as metadata};
