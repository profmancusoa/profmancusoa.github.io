import{S as zo,i as Io,s as Lo,C as Je,w as bo,x as wo,y as So,z as qo,A as ho,f as Bo,t as Ro,B as Do,P as Po,l as t,r as s,a as u,m as i,n as r,u as c,h as o,c as f,F as Ze,p as F,b as n,G as l,E as Co}from"../../chunks/index-ba2b2825.js";import{P as To}from"../../chunks/_post-5a01a328.js";import"../../chunks/helpers-e59642c8.js";import"../../chunks/Categoria.svelte_svelte_type_style_lang-d5b62848.js";function Mo(b){let d,_,v,g,p,m,E,fe,ee,w,me,oe,S,_e,le,q,ve,te,B,ge,ie,h,I,he,O,Pe,Ee,ze,L,Ie,Z,Le,be,we,R,Se,z,D,J,qe,Be,Re,C,K,De,Ce,Te,T,Q,Me,xe,ae,M,V,$e,re,x,W,ke,ne,$,X,ye,se,k,Ae,ce,y,Y,Ue,de,P,A,Ke,Ge,U,Qe,He,G,Ve;return{c(){d=t("h3"),_=s("A cosa serve?"),v=u(),g=t("p"),p=s(`Il protocollo Spanning Tree \xE8 un protocollo di rete che consente di creare una topologia di rete fisica loop-free. Lo spanning tree viene utilizzato per
evitare che i pacchetti circolino in loop infiniti all\u2019interno della rete.`),m=u(),E=t("p"),fe=s(`Il protocollo consente di selezionare un percorso principale tra due nodi
qualsiasi all\u2019interno della rete e di inoltrare il traffico di rete solo su questo percorso. Ci\xF2 consente di ridurre il traffico di rete inutile e di
migliorare l\u2019efficienza della rete.`),ee=u(),w=t("h3"),me=s("Il Broadcast storming"),oe=u(),S=t("p"),_e=s(`Il protocollo spanning tree \xE8 anche utilizzato per prevenire gli effetti negativi del broadcast storm. I broadcast storm
si verificano quando un pacchetto viene inoltrato in modo errato e viene inoltrato a tutti i nodi della rete. Ci\xF2 pu\xF2 causare
un sovraccarico di traffico e un\u2019interruzione delle comunicazioni.`),le=u(),q=t("h3"),ve=s("Come funziona lo spanning-tree protocol?"),te=u(),B=t("p"),ge=s("Il funzionamento dello STP si pu\xF2 spiegare per passaggi:"),ie=u(),h=t("ol"),I=t("li"),he=s("Aquisizione dei "),O=t("em"),Pe=s("bridgeID"),Ee=s(" degli switch all\u2019interno della rete."),ze=u(),L=t("li"),Ie=s("Selezione "),Z=t("em"),Le=s("root-bridge"),be=s(` (tutte le porte del root-bridge sono designated-
port)`),we=u(),R=t("li"),Se=s("Identificazione delle porte degli altri switch: "),z=t("ul"),D=t("li"),J=t("em"),qe=s("root-port"),Be=s("(RP)"),Re=u(),C=t("li"),K=t("em"),De=s("designated-port"),Ce=s("(DP)"),Te=u(),T=t("li"),Q=t("em"),Me=s("blocked-port"),xe=s("(BP)"),ae=u(),M=t("ul"),V=t("li"),$e=s("Le RP si identificano dal minor costo del percorso, che dalla porta dello switch interessato raggiunge il RB."),re=u(),x=t("ul"),W=t("li"),ke=s(`Le DP si identificano per esclusione, dato che una delle due porte in un collegamento tra switch (segmento) sar\xE0 o RP o BP, l\u2019altra
dello stesso collegamento sar\xE0 DP. Le porte dei collegamenti che non connettono lo switch ad altri switch
(es. PC, server) sono SEMPRE DP.`),ne=u(),$=t("ul"),X=t("li"),ye=s("Le BP, dette anche \u201Cporte di ridondanza\u201D, sono delle porte dove il passaggio dei frame \xE8 bloccato."),se=u(),k=t("p"),Ae=s(`Per capire quando in
un collegamento tra switch una porta \xE8 blocked e l\u2019altra \xE8 designated bisogna fare questo ragionamento:`),ce=u(),y=t("ul"),Y=t("li"),Ue=s(`si immagina che in un collegamento tra due switch ci sia collegato un computer e che questo voglia raggiungere il RB, quindi,
contando il collegamento a cui \xE8 connesso, inizio a calcolare il percorso col costo minore. Identifico come DP la
porta dello switch che \xE8 connessa al percorso col minor costo, l\u2019altra, invece, la identifico come BP.`),de=u(),P=t("center"),A=t("img"),Ge=u(),U=t("img"),He=u(),G=t("img"),this.h()},l(e){d=i(e,"H3",{});var a=r(d);_=c(a,"A cosa serve?"),a.forEach(o),v=f(e),g=i(e,"P",{});var We=r(g);p=c(We,`Il protocollo Spanning Tree \xE8 un protocollo di rete che consente di creare una topologia di rete fisica loop-free. Lo spanning tree viene utilizzato per
evitare che i pacchetti circolino in loop infiniti all\u2019interno della rete.`),We.forEach(o),m=f(e),E=i(e,"P",{});var Xe=r(E);fe=c(Xe,`Il protocollo consente di selezionare un percorso principale tra due nodi
qualsiasi all\u2019interno della rete e di inoltrare il traffico di rete solo su questo percorso. Ci\xF2 consente di ridurre il traffico di rete inutile e di
migliorare l\u2019efficienza della rete.`),Xe.forEach(o),ee=f(e),w=i(e,"H3",{});var Ye=r(w);me=c(Ye,"Il Broadcast storming"),Ye.forEach(o),oe=f(e),S=i(e,"P",{});var eo=r(S);_e=c(eo,`Il protocollo spanning tree \xE8 anche utilizzato per prevenire gli effetti negativi del broadcast storm. I broadcast storm
si verificano quando un pacchetto viene inoltrato in modo errato e viene inoltrato a tutti i nodi della rete. Ci\xF2 pu\xF2 causare
un sovraccarico di traffico e un\u2019interruzione delle comunicazioni.`),eo.forEach(o),le=f(e),q=i(e,"H3",{});var oo=r(q);ve=c(oo,"Come funziona lo spanning-tree protocol?"),oo.forEach(o),te=f(e),B=i(e,"P",{});var lo=r(B);ge=c(lo,"Il funzionamento dello STP si pu\xF2 spiegare per passaggi:"),lo.forEach(o),ie=f(e),h=i(e,"OL",{});var H=r(h);I=i(H,"LI",{});var pe=r(I);he=c(pe,"Aquisizione dei "),O=i(pe,"EM",{});var to=r(O);Pe=c(to,"bridgeID"),to.forEach(o),Ee=c(pe," degli switch all\u2019interno della rete."),pe.forEach(o),ze=f(H),L=i(H,"LI",{});var ue=r(L);Ie=c(ue,"Selezione "),Z=i(ue,"EM",{});var io=r(Z);Le=c(io,"root-bridge"),io.forEach(o),be=c(ue,` (tutte le porte del root-bridge sono designated-
port)`),ue.forEach(o),we=f(H),R=i(H,"LI",{});var Ne=r(R);Se=c(Ne,"Identificazione delle porte degli altri switch: "),z=i(Ne,"UL",{});var N=r(z);D=i(N,"LI",{});var je=r(D);J=i(je,"EM",{});var ao=r(J);qe=c(ao,"root-port"),ao.forEach(o),Be=c(je,"(RP)"),je.forEach(o),Re=f(N),C=i(N,"LI",{});var Fe=r(C);K=i(Fe,"EM",{});var ro=r(K);De=c(ro,"designated-port"),ro.forEach(o),Ce=c(Fe,"(DP)"),Fe.forEach(o),Te=f(N),T=i(N,"LI",{});var Oe=r(T);Q=i(Oe,"EM",{});var no=r(Q);Me=c(no,"blocked-port"),no.forEach(o),xe=c(Oe,"(BP)"),Oe.forEach(o),N.forEach(o),Ne.forEach(o),H.forEach(o),ae=f(e),M=i(e,"UL",{});var so=r(M);V=i(so,"LI",{});var co=r(V);$e=c(co,"Le RP si identificano dal minor costo del percorso, che dalla porta dello switch interessato raggiunge il RB."),co.forEach(o),so.forEach(o),re=f(e),x=i(e,"UL",{});var po=r(x);W=i(po,"LI",{});var uo=r(W);ke=c(uo,`Le DP si identificano per esclusione, dato che una delle due porte in un collegamento tra switch (segmento) sar\xE0 o RP o BP, l\u2019altra
dello stesso collegamento sar\xE0 DP. Le porte dei collegamenti che non connettono lo switch ad altri switch
(es. PC, server) sono SEMPRE DP.`),uo.forEach(o),po.forEach(o),ne=f(e),$=i(e,"UL",{});var fo=r($);X=i(fo,"LI",{});var mo=r(X);ye=c(mo,"Le BP, dette anche \u201Cporte di ridondanza\u201D, sono delle porte dove il passaggio dei frame \xE8 bloccato."),mo.forEach(o),fo.forEach(o),se=f(e),k=i(e,"P",{});var _o=r(k);Ae=c(_o,`Per capire quando in
un collegamento tra switch una porta \xE8 blocked e l\u2019altra \xE8 designated bisogna fare questo ragionamento:`),_o.forEach(o),ce=f(e),y=i(e,"UL",{});var vo=r(y);Y=i(vo,"LI",{});var go=r(Y);Ue=c(go,`si immagina che in un collegamento tra due switch ci sia collegato un computer e che questo voglia raggiungere il RB, quindi,
contando il collegamento a cui \xE8 connesso, inizio a calcolare il percorso col costo minore. Identifico come DP la
porta dello switch che \xE8 connessa al percorso col minor costo, l\u2019altra, invece, la identifico come BP.`),go.forEach(o),vo.forEach(o),de=f(e),P=i(e,"CENTER",{});var j=r(P);A=i(j,"IMG",{src:!0,alt:!0}),Ge=f(j),U=i(j,"IMG",{src:!0,alt:!0}),He=f(j),G=i(j,"IMG",{src:!0,alt:!0}),j.forEach(o),this.h()},h(){Ze(A.src,Ke="/img/posts/il-protocollo-di-livello-2-spanning-tree/schermata1a.webp")||F(A,"src",Ke),F(A,"alt","Schemata1-STP"),Ze(U.src,Qe="/img/posts/il-protocollo-di-livello-2-spanning-tree/schermata2a.webp")||F(U,"src",Qe),F(U,"alt","Schemata2-STP"),Ze(G.src,Ve="/img/posts/il-protocollo-di-livello-2-spanning-tree/schermata3a.webp")||F(G,"src",Ve),F(G,"alt","Schemata3-STP")},m(e,a){n(e,d,a),l(d,_),n(e,v,a),n(e,g,a),l(g,p),n(e,m,a),n(e,E,a),l(E,fe),n(e,ee,a),n(e,w,a),l(w,me),n(e,oe,a),n(e,S,a),l(S,_e),n(e,le,a),n(e,q,a),l(q,ve),n(e,te,a),n(e,B,a),l(B,ge),n(e,ie,a),n(e,h,a),l(h,I),l(I,he),l(I,O),l(O,Pe),l(I,Ee),l(h,ze),l(h,L),l(L,Ie),l(L,Z),l(Z,Le),l(L,be),l(h,we),l(h,R),l(R,Se),l(R,z),l(z,D),l(D,J),l(J,qe),l(D,Be),l(z,Re),l(z,C),l(C,K),l(K,De),l(C,Ce),l(z,Te),l(z,T),l(T,Q),l(Q,Me),l(T,xe),n(e,ae,a),n(e,M,a),l(M,V),l(V,$e),n(e,re,a),n(e,x,a),l(x,W),l(W,ke),n(e,ne,a),n(e,$,a),l($,X),l(X,ye),n(e,se,a),n(e,k,a),l(k,Ae),n(e,ce,a),n(e,y,a),l(y,Y),l(Y,Ue),n(e,de,a),n(e,P,a),l(P,A),l(P,Ge),l(P,U),l(P,He),l(P,G)},p:Co,d(e){e&&o(d),e&&o(v),e&&o(g),e&&o(m),e&&o(E),e&&o(ee),e&&o(w),e&&o(oe),e&&o(S),e&&o(le),e&&o(q),e&&o(te),e&&o(B),e&&o(ie),e&&o(h),e&&o(ae),e&&o(M),e&&o(re),e&&o(x),e&&o(ne),e&&o($),e&&o(se),e&&o(k),e&&o(ce),e&&o(y),e&&o(de),e&&o(P)}}}function xo(b){let d,_;const v=[b[0],Eo];let g={$$slots:{default:[Mo]},$$scope:{ctx:b}};for(let p=0;p<v.length;p+=1)g=Je(g,v[p]);return d=new To({props:g}),{c(){bo(d.$$.fragment)},l(p){wo(d.$$.fragment,p)},m(p,m){So(d,p,m),_=!0},p(p,[m]){const E=m&1?qo(v,[m&1&&ho(p[0]),m&0&&ho(Eo)]):{};m&2&&(E.$$scope={dirty:m,ctx:p}),d.$set(E)},i(p){_||(Bo(d.$$.fragment,p),_=!0)},o(p){Ro(d.$$.fragment,p),_=!1},d(p){Do(d,p)}}}const Eo={id:"2022-11-15-12",titolo:"Il protocollo di livello 2 Spanning-Tree",featured:!1,autore:"Luca Bortoluzzi",data:"2022-11-15T00:00:00.000Z",cover:"cover_stpa.webp",introduzione:"Introduzione allo Spanning-tree Protocol",pubblicato:!0,sezione:"Blog",categorie:["Protocols","Technology","Networking","Switching"]};function $o(b,d,_){return b.$$set=v=>{_(0,d=Je(Je({},d),Po(v)))},d=Po(d),[d]}class Go extends zo{constructor(d){super(),Io(this,d,$o,xo,Lo,{})}}export{Go as default,Eo as metadata};
